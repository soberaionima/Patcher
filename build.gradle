description = 'Patcher Shell'

apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'

defaultTasks 'build', 'distZip'

repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/libs-release" }
    maven { url "http://spring-roo-repository.springsource.org/release" }
    flatDir name: 'localJars', dirs: "${rootProject.rootDir}/lib"
}

dependencies {
    compile "org.springframework.shell:spring-shell:$springShellVersion"
    compile "com.google.guava:guava:13.0.1"
    compile "org.apache.commons:commons-lang3:3.1"
    compile "commons-lang:commons-lang:2.6"
    compile ":dfc:dfc"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
	compile "com.typesafe:config:1.0.1"

	compile "org.aspectj:aspectjrt:1.7.1"
    runtime "org.aspectj:aspectjweaver:1.7.1"
    
	runtime ":ojdbc6:ojdbc6"
    runtime ":jsafeFIPS:jsafeFIPS"
    runtime ":certjFIPS:certjFIPS"
    runtime "mysql:mysql-connector-java:5.1.23"

    compile "org.slf4j:slf4j-api:1.7.2"
    runtime "org.slf4j:slf4j-log4j12:1.7.2"

    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile ":mockito-groovy-support-1.2:mockito-groovy-support-1.2"
    testCompile "org.testng:testng:6.8"
    testCompile "org.easytesting:fest-assert:1.4"
	testCompile "org.spockframework:spock-core:0.7-groovy-2.0"

}

task createInfrastructure {
    def infrastructure = file("${rootProject.projectDir}/infrastructure")
    outputs.dir infrastructure
}

applicationDistribution.from(createInfrastructure) {
    into "infrastructure"
}

startScripts {
	mainClassName = "by.hzv.patcher.cli.Main"	
}



/* workaround for hybrid module (Java, Groovy). More details here http://issues.gradle.org/browse/GRADLE-1190 */
sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDir 'src/main/java'
